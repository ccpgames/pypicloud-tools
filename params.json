{"name":"Pypicloud-tools","tagline":"Tools to bypass a PyPICloud installation and communicate directly with S3","body":"pypicloud-tools\r\n===============\r\n\r\n[![Build\r\nStatus](https://travis-ci.org/ccpgames/pypicloud-tools.png?branch=master)](https://travis-ci.org/ccpgames/pypicloud-tools)\r\n[![Coverage\r\nStatus](https://coveralls.io/repos/ccpgames/pypicloud-tools/badge.svg?branch=master)](https://coveralls.io/r/ccpgames/pypicloud-tools?branch=master)\r\n[![Version](https://img.shields.io/pypi/v/pypicloud-tools.svg)](https://pypi.python.org/pypi/pypicloud-tools/)\r\n[![Download\r\nformat](https://img.shields.io/badge/format-wheel-green.svg?)](https://pypi.python.org/pypi/pypicloud-tools/)\r\n[![Downloads this\r\nmonth](https://img.shields.io/pypi/dm/pypicloud-tools.svg)](https://pypi.python.org/pypi/pypicloud-tools/)\r\n[![Development\r\nStatus](https://img.shields.io/badge/status-beta-orange.svg)](https://pypi.python.org/pypi/pypicloud-tools/)\r\n[![License](https://img.shields.io/github/license/ccpgames/pypicloud-tools.svg)](https://pypi.python.org/pypi/pypicloud-tools/)\r\n\r\nTools to bypass a PyPICloud installation and communicate directly with\r\nS3\r\n\r\nUtilities\r\n---------\r\n\r\n### Upload\r\n\r\nUploads file(s) to the PyPICloud S3 bucket directly and performs an\r\nadmin API call to rebuild the PyPICloud index after.\r\n\r\nExample:\r\n\r\n``` {.sourceCode .bash}\r\n$ upload dist/*\r\nUploading example-project/example-project-0.0.1.tar.gz ..... done!\r\nUploading example-project/example_project-0.0.1-py2-none-any.whl ..... done!\r\nUploading example-project/example_project-0.0.1-py2.7.egg ...... done!\r\nPyPICloud server at http://your.pypicloud.server/pypi updated\r\n```\r\n\r\nIt's fine if the file names use altering hypens/underscores per release\r\ntype like you see above, they only need to match the initial part of the\r\nkey before the `/` to be considered the same package.\r\n\r\n### Download\r\n\r\nDownloads the latest or a specific version directly from S3. Does not\r\ntalk to PyPICloud and does not install the downloaded package. You can\r\nuse pip to do either/both of those things.\r\n\r\nAlso possible with the download command is the `--url` flag to only\r\nprint a download URL (usable for 5 minutes).\r\n\r\nBy default, if there are multiple releases of the same package+release,\r\ndownload will prefer wheels, then eggs, then source distributions. You\r\ncan override that behavior with the `--egg` and `--src` flags.\r\n\r\nExamples:\r\n\r\n``` {.sourceCode .bash}\r\n$ download example_project==0.0.1\r\nexample_project-0.0.1-py2-none-any.whl\r\n```\r\n\r\n``` {.sourceCode .bash}\r\n$ download example-project --egg\r\nexample_project-0.0.1-py2.7.egg\r\n```\r\n\r\nPipes and redirects work like you'd expect:\r\n\r\n``` {.sourceCode .bash}\r\n$ download example_project --src | tar -xzf -\r\n```\r\n\r\n### List\r\n\r\nLists a package's releases, or releases of a package at a specific\r\nversion. Again, talks straight to S3 and bypasses the PyPICloud\r\ninstallation.\r\n\r\nExample:\r\n\r\n``` {.sourceCode .bash}\r\n$ list example_project\r\nexample-project==0.0.1 : example-project-0.0.1.tar.gz\r\nexample-project==0.0.1 : example_project-0.0.1-py2.7.egg\r\nexample-project==0.0.1 : example_project-0.0.1-py2-none-any.whl\r\n```\r\n\r\nListing multiple packages or packages with a version specifier is also\r\nsupported.\r\n\r\nWhen called without any arguments, `list` will display all known\r\npackages.\r\n\r\n### Rehost\r\n\r\nRehosts an upstream package from PyPI into the pypicloud installation.\r\nThis can be handy if you have pypicloud clients which only have access\r\nto it and s3 but not the rest of the internet.\r\n\r\nExample:\r\n\r\n``` {.sourceCode .bash}\r\n$ rehost requests==1.0.0\r\nCollecting requests==1.0.0\r\n  Downloading requests-1.0.0.tar.gz (335kB)\r\n    100% |████████████████████████████████| 335kB 929kB/s\r\n  Saved /var/folders/53/kl4v4_9509ng148kp_pwmc5h0000gn/T/tmpuj5JUJ/requests-1.0.0.tar.gz\r\nSuccessfully downloaded requests\r\nUploading requests/requests-1.0.0.tar.gz ............ done!\r\nPyPICloud server at http://your_pypicloud_server/pypi updated\r\n```\r\n\r\nIf a specific version is not provided, the latest will be used. Multiple\r\npackages can be used in the same command.\r\n\r\nInstallation\r\n------------\r\n\r\n### Simple\r\n\r\n``` {.sourceCode .bash}\r\n$ pip install pypicloud-tools\r\n```\r\n\r\n### From source\r\n\r\n``` {.sourceCode .bash}\r\n$ git clone https://github.com/ccpgames/pypicloud-tools.git\r\n$ cd pypicloud-tools\r\n$ python setup.py install\r\n```\r\n\r\nConfiguration\r\n-------------\r\n\r\nConfiguration for pypicloud-tools piggybacks on your `~/.pypirc` file.\r\nYou can specify an alternate config file with the `--config` flag, but\r\nit must be in the same syntax. That syntax is:\r\n\r\n``` {.sourceCode .text}\r\n[pypicloud]\r\n    repository:http://your.pypicloud.server/pypi\r\n    username:admin\r\n    password:hunter7\r\n    bucket:your_bucket\r\n    access:some_key\r\n    secret:other_key\r\n    acl:optional_acl\r\n```\r\n\r\nThe key **must** be `pypicloud`, it is the only key pypicloud-tools will\r\nlook at. The username/password combination should have admin credentials\r\non the PyPICloud installation as it needs to call `/admin/rebuild` after\r\na succesful upload.\r\n\r\nCopyright and License\r\n=====================\r\n\r\npypicloud-tools was written by Adam Talsma\r\n\r\nCopyright (c) 2015 CCP hf.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a\r\ncopy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included\r\nin all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}